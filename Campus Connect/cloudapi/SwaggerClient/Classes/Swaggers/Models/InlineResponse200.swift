//
// InlineResponse200.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class InlineResponse200: JSONEncodable {
    public enum DataType: String { 
        case AlprResults = "alpr_results"
        case AlprGroup = "alpr_group"
        case Heartbeat = "heartbeat"
    }
    public var processingTime: InlineResponse200ProcessingTime?
    /** Width of the uploaded image in pixels */
    public var imgWidth: Int32?
    /** Height of the input image in pixels */
    public var imgHeight: Int32?
    /** The number of API credits that were used to process this image */
    public var creditCost: Int32?
    /** The number of API credits used this month */
    public var creditsMonthlyUsed: Int32?
    /** The maximum number of API credits available this month according to your plan */
    public var creditsMonthlyTotal: Int32?
    public var results: [PlateDetails]?
    /** Describes the areas analyzed in the input image */
    public var regionsOfInterest: [RegionOfInterest]?
    /** Epoch time that the image was processed in milliseconds */
    public var epochTime: Double?
    /** API format version */
    public var version: Int32?
    /** Specifies the type of data in this response */
    public var dataType: DataType?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["processing_time"] = self.processingTime?.encodeToJSON()
        nillableDictionary["img_width"] = self.imgWidth?.encodeToJSON()
        nillableDictionary["img_height"] = self.imgHeight?.encodeToJSON()
        nillableDictionary["credit_cost"] = self.creditCost?.encodeToJSON()
        nillableDictionary["credits_monthly_used"] = self.creditsMonthlyUsed?.encodeToJSON()
        nillableDictionary["credits_monthly_total"] = self.creditsMonthlyTotal?.encodeToJSON()
        nillableDictionary["results"] = self.results?.encodeToJSON()
        nillableDictionary["regions_of_interest"] = self.regionsOfInterest?.encodeToJSON()
        nillableDictionary["epoch_time"] = self.epochTime
        nillableDictionary["version"] = self.version?.encodeToJSON()
        nillableDictionary["data_type"] = self.dataType?.rawValue
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
